#%RAML 0.8
title: supermarket-order-manage-api
mediaType: application/json

/orders:
  get:
    description: As a admin, I can get all orders so that I can manage them.
    responses:
      200:
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "totalCount": {
                  "type": "integer"
                },
                "orders": {
                  "type": "array",
                  "properties": {
                    "provider_id": {
                      "type": "integer"
                    },
                    "product_id": {
                      "type": "integer"
                    },
                    "count": {
                      "type": "integer"
                     },
                    "required": ["product_id", "provider_id", "count"]
                  }
                }
              }
            example: |
              {
                "totalCount": 1,
                [{
                  "provider_id": 1,
                  "product_id": 2,
                  "count": 10000
                }]

              }

  post:
    description: As a admin, I can create an order so that I can buy some products from provider.
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "provider_id": {
                "type": "integer"
              },
              "product_id": {
                "type": "integer"
              },
              "count": {
                "type": "integer"
               }
            },
           "required": ["product_id", "provider_id", "count"]
          }
        example: |
          {
            "provider_id": 1,
            "product_id": 2,
            "count": 10000
          }
    responses:
      201:
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                  "order_url": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            example: |
              {
                "order_id": "orders/10"
              }

 /{id}:
    get:
      description: As a admin, I can get an order so that I can manage it.
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "array",
                  "properties": {
                    "provider_id": {
                      "type": "integer"
                    },
                    "product_id": {
                      "type": "integer"
                    },
                    "count": {
                      "type": "integer"
                     },
                     "required": ["product_id", "provider_id", "count"]
                  }
                }
              example: |
                {
                  "provider_id": 1,
                  "product_id": 2,
                  "count": 10000
                }

    put:
      description: As a admin, I can update an order so that I modify order details.
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                  "provider_id": {
                    "type": "integer"
                  },
                  "product_id": {
                    "type": "integer"
                  },
                  "count": {
                    "type": "integer"
                   },
                   "required": ["product_id", "provider_id", "count"]
                }
              }
            example: |
              {
                "provider_id": 1,
                "product_id": 2,
                "count": 10000
              }
        responses:
          204:


    delete:
      description: As a admin, I can delete an order so that I can remove an useless order.
        204:

/providers:
  get:
    description: As a admin, I can get all providers so that I can manage them.
    responses:
      200:
        body:
          application/json:
           schema: |
             {
               "$schema": "http://json-schema.org/draft-04/schema#",
               "type": "object",
               "totalCount": {
                 "type": "integer"
               },
               "providers": {
                 "type": "array",
                 "properties": {
                   "id": {
                     "type": "integer"
                   },
                   "name": {
                     "type": "string"
                    }
                 },
                 "required": ["id", "name"]
               }
             }
          example: |
            {
              "totalCount": 2,
              [{
                "id": 1,
                "name": "Super Apple"
               }, {
                "id": 2,
                "name": "Little cookie"
              }]
            }


  post:
    description: As a admin, I can create a provider so that I can buy products from a new provider.
    body:
      application/json:
        schema: |
           {
             "$schema": "http://json-schema.org/draft-04/schema#",
             "type": "object",
             "properties": {
               "name": {
                "type": "string",
                "required": true
               }
             }
           }
        example: |
          {
            "name": "Little Yellow Duck"
          }

    responses:
        201:
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                    "provider_url": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              example: |
                {
                  "provider_id": "providers/3"
                }

  /{id}:
    get:
      description: As a admin, I can get an provider so that I can view its details.
      responses:
        200:
          body:
            application/json:
             schema: |
               {
                 "$schema": "http://json-schema.org/draft-04/schema#",
                 "type": "object",
                 "properties": {
                   "id": {
                     "type": "integer"
                   },
                   "name": {
                     "type": "string"
                    },
                    "required": ["id", "name"]
                 }
               }
            example: |
              {
                "id": 1,
                "name": "Super Apple"
              }

    put:
      description: As a admin, I can update a provider's detail when this provider's detail had changed.
      body:
        application/json:
          schema: |
           {
             "$schema": "http://json-schema.org/draft-04/schema#",
             "type": "object",
             "properties": {
               "id": {
                "type": "string",
                "required": true
               },
               "name": {
                "type": "string",
                "required": true
               }
             }
           }
          example: |
            {
              "id": 1,
              "name": "Little Yellow Duck"
            }
      responses:
        204:


    delete:
      description: As a admin, I can delete a provider when I won't to buy products from it.
        204:

